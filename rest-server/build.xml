<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     16 oct. 2009 11:59:35                                                        

     rest-server    
     Dummy rest-server build file
                   
     ====================================================================== -->
<project name="rest-server">
	<description>
    	Dummy rest-server build file
    </description>
	<property file="build.properties" />

	<path id="jetty.plugin.classpath">
		<fileset dir="${jetty.lib}" includes="*.jar" />
	</path>

	<path id="libs.classpath" path=".">
		<fileset dir="${libs.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="artifacts.classpath">
		<fileset dir="${artifacts.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="tasks.classpath">
		<pathelement path="${tmp.task-classes.dir}" />
		<path refid="artifacts.classpath" />
	</path>
	<path id="servlet-api.classpath">
		<fileset dir="${common.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="compile.classpath">
		<path refid="libs.classpath" />
		<path refid="servlet-api.classpath" />
	</path>

	<target name="prepare" description="--> prepares directories">
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${tmp.webinf.dir}" />
		<mkdir dir="${tmp.classes.dir}" />
		<mkdir dir="${tmp.task-classes.dir}" />
		<mkdir dir="${artifacts.dir}" />
	</target>

	<target name="compile-tasks" depends="prepare" description="--> compiles the tasks classes">
		<javac destdir="${tmp.task-classes.dir}" srcdir="${tasks.dir}" classpathref="tasks.classpath" debug="true">
			<compilerarg value="-Xlint:none" />
		</javac>
	</target>

	<target name="compile" depends="compile-tasks" description="--> compiles the classes">
		<javac destdir="${tmp.classes.dir}" srcdir="${src.dir}" classpathref="compile.classpath" debug="true" encoding="UTF-8">
			<compilerarg value="-Xlint:none" />
		</javac>
	</target>

	<target name="war" depends="compile" description="--> generate project's war">
		<delete file="${artifacts.dir}/${war.file}" />
		<war destfile="${artifacts.dir}/${war.file}" webxml="${webapp.dir}/WEB-INF/web.xml" compress="true">
			<fileset dir="${webapp.dir}">
				<exclude name="WEB-INF/web.xml" />
				<exclude name="WEB-INF/classes/**/*" />
				<exclude name="js/" />
				<exclude name="css/" />
			</fileset>
			<fileset dir="${tmp.dir}">
				<include name="js/*" />
				<include name="css/*" />
			</fileset>
			<classes dir="${tmp.classes.dir}" />
		</war>
	</target>

	<target name="run-jetty" depends="war" description="--> runs a jetty instance">
		<jetty port="8080" databasePort="9001" />
		<echo message="Waiting 1 minutes for jetty to start" />
		<waitfor maxwait="1" maxwaitunit="minute" checkevery="500">
			<http url="http://localhost:8080/rest-server/" />
		</waitfor>
		<input message="Waiting for jetty" />
		<jetty-stopper port="9191" />
	</target>
	<macrodef name="jetty">
		<attribute name="port" default="9090" />
		<attribute name="databasePort" default="9001" />
		<sequential>
			<echo message="Running jetty at @{port}" />
			<delete dir="jetty_@{port}" />
			<mkdir dir="jetty_@{port}" />
			<java fork="true" spawn="true" classname="br.com.caelum.rest.servet.ant.JettyStartTask">
				<arg value="@{port}" />
				<arg value="@{databasePort}" />
				<arg value="${artifacts.dir}/${war.file}" />
				<arg value="-logDir=target/artifacts" />
				<classpath>
					<fileset dir="${artifacts.lib.dir}/jetty" includes="*.jar" />
					<pathelement path="${tmp.task-classes.dir}" />
					<path refid="servlet-api.classpath" />
				</classpath>
			</java>
		</sequential>
	</macrodef>

	<macrodef name="jetty-stopper">
		<attribute name="port" default="9190" />
		<sequential>
			<taskdef name="jetty-stop" classname="br.com.caelum.caelumweb2.tasks.JettyStopTask">
				<classpath>
					<fileset dir="${artifacts.lib.dir}/jetty" includes="*.jar" />
					<pathelement path="${tmp.task-classes.dir}" />
					<path refid="servlet-api.classpath" />
				</classpath>
			</taskdef>
			<echo message="Stopping jetty at @{port}" />
			<jetty-stop port="@{port}" />
		</sequential>
	</macrodef>
</project>
